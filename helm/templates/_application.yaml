{{- define "argocd.app" }}
{{- $_ := (dict) }}
{{- /* make a $root variable which has all the root level values plus $root.curApp */}}
{{- $root := .root }}
{{- $curApp := (dict) }}
{{- $_ = merge $curApp .curApp }}
{{- /* merge root values to curApp, retaining curApp value if provided */}}
{{- $_ = merge $curApp (pick $root.Values "project" "repoUrl" "repoBranch" "repoPath" "namespacePrefix" "namePrefix" "addNamespacePrefix" "addNamePrefix" ) }}
{{- /* use environment for namespace/name prefix if not provided at app or root level */}}
{{- if hasKey $root.Values "global" }}
{{- if hasKey $root.Values.global "clusterInfo" }}
  {{- $_ = merge $curApp (pick $root.Values.global.clusterInfo "clusterName" "environment") }}
  {{- $_ = merge $curApp (set (dict) "namespacePrefix" (get $root.Values.global.clusterInfo "environment") ) }}
  {{- $_ = merge $curApp (set (dict) "namePrefix" (get $root.Values.global.clusterInfo "environment") ) }}
{{- end }}
{{- end }}
{{- /* put clusterName and enviornment into curApp, retaining curApp value if provided */}}
{{- $_ = set $root "curApp" $curApp }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  {{- if and ($root.curApp.namePrefix) ((hasKey $root.curApp "addNamePrefix") | ternary $root.curApp.addNamePrefix true) }}
  name: {{ printf "%s-%s" $root.curApp.namePrefix (required "a name must be specified for every app" .curApp.name) | quote }}
  {{- else }}
  name: {{ required "a name must be specified for every app" .curApp.name | quote }}
  {{- end }}
  namespace: {{ $root.applicationNamespace | default "argocd" | quote }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  {{- if hasKey $root.curApp "annotations" | ternary $root.curApp.annotations false }}
  annotations:
    {{- (tpl $root.curApp.annotations $root) | nindent 4 }}
  {{- end }}
  {{- if $root.curApp.labels | default false }}
  labels:
    {{- tpl (toYaml $root.curApp.labels) $root | nindent 4 }}
  {{- end }}
spec:
  destination:
    {{- if and ($root.curApp.namespacePrefix) ((hasKey $root.curApp "addNamespacePrefix") | ternary $root.curApp.addNamespacePrefix true) }}
    namespace: {{ printf "%s-%s" $root.curApp.namespacePrefix (required "A namespace must be specified for every app" $root.curApp.namespace) | quote }}
    {{- else }}
    namespace: {{ required "A namespace must be specified for every app" $root.curApp.namespace | quote }}
    {{- end }}
    name: {{ $root.curApp.clusterName | default "https://kubernetes.default.svc" | quote }}
  project: {{ tpl $root.curApp.project $root | default "default" | quote }}
  {{- if $root.curApp.syncPolicy | default false }}
  syncPolicy:
    {{- (tpl $root.curApp.syncPolicy $root) | nindent 4 }}
  {{- end }}
  {{- if $root.curApp.ignoreDifferences | default false }}
  ignoreDifferences:
    {{- (tpl $root.curApp.ignoreDifferences $root) | nindent 4 }}
  {{- end }}
  source:
    repoURL: {{ tpl (toYaml (required "A repoUrl must be provided" $root.curApp.repoUrl)) $root | quote }}
    path: {{ $root.curApp.repoPath | default $root.curApp.name | quote }}
    targetRevision: {{ $root.curApp.repoBranch | default "main" | quote }}
    {{- if $root.curApp.plugin | default false }}
    plugin:
      name: {{ $root.curApp.plugin.name }}
      env:
        {{- range $key, $value := $root.curApp.plugin.env }}
        - name: {{ $key }}
          value: {{ tpl $value (dict "Values" $root.Values "Template" $.root.Template) | quote }}
        {{- end }}
    {{- else }}
    helm:
      {{- if $root.curApp.releaseName | default false }}
      releaseName: {{ .curApp.releaseName }}
      {{- end }}
      valueFiles:
        {{- if (hasKey $root.curApp "valueFiles") }}
        {{- tpl (toYaml $root.curApp.valueFiles) $root | nindent 8 }}
        {{- else }}
        - values.yaml
        {{- if ($root.curApp.environment) }}
        - values-{{ $root.curApp.environment }}.yaml
        {{- end }}
        {{- end }}
      {{- if or (hasKey $root.Values "global") (hasKey $root.curApp "extraValues") }}
      values: |
        {{- if hasKey $root.Values "global" }}
        {{- if hasKey $root.Values.global "clusterInfo" }}
        global:
          clusterInfo:
{{ tpl (toYaml $root.Values.global.clusterInfo) $root | indent 12}}
        {{- end }}
        {{- end }}
        {{- if hasKey $root.curApp "extraValues" }}
{{tpl $root.curApp.extraValues $root | indent 8}}
        {{- end }}
      {{- end }}
{{- end }}
{{- end }}
